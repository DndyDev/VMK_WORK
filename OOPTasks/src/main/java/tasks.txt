Задания
1.	Создать класс User, содержащий private переменные login, password.
    Создать внутренний класс Query в классе User.
    Класс Query содержит ме-тод printToLog(),
    который распечатывает на консоль сообщение о том что поль-зователь с таким-то логином и паролем отправил запрос.
    Класс User, содержит метод createQuery(), в котором создается объект класса Query и вызывается метод printToLog().
    В методе main(): создать экземпляр класса User и вызвать метод createQuery();
      создать экземпляр класса Query и вызвать метод printToLog() используя конструкцию user.new Query();
      создать экземпляр класса Query и вызвать метод printToLog() используя конструкцию new User().new Query();
2.	Переписать предыдущее задание*, используя Query как локальный класс (внут-ренний в соответствующем методе).
3.	Переписать класс Query, как статический класс.
4.	Переписать класс Query как анонимный, расширяющий интерфейс IQuery, со-здав внутренний интерфейс IQuery,
    содержащий дефолтный метод printToLog.
5.	Переписать класс Query, используя вместо него внешний интерфейс IQuery, содержащий статический метод printToLog.
6.	Переписать класс Query, используя вместо него внутренний или внешний ин-терфейс IQuery,
содержащий внутренний статический класс типа IQuery, реали-зующий метод printToLog.
7.	Создать внутренний интерфейс INames, как пространство имен для данной предметной области,
а именно, содержащий Enum и константы (например, ти-пы прав доступа пользователей, строка соединения и т.д.)
8.	Создать внутренний приватный класс типа Exception, описывающий исключе-ние если,
    например, у пользователя нет прав отправлять запрос.
    Соответ-ственно, переписать метод createQuery с реализацией данного исключения.
9.	Перенести класс исключения в интерфейс IHelper и
    в этом же интерфейсе реа-лизовать метод checkRole с использованием данного исключения.
    Метод checkRole затем использовать в логике метода createQuery.

*переписать/перенести/создать, значит не затереть текущее задание, а создать новое, напри-мер, в новом package +
переписать метод main и запустить его, убедиться в функциональности
